#!/usr/bin/env bash

if [ -z "${XDG_CONFIG_HOME:-}" ]; then
    echo "XDG_CONFIG_HOME not set, using ~/.config."
    export XDG_CONFIG_HOME="$HOME/.config"
fi

if [ -z "${DEV_ENV:-}" ]; then
    echo "Error: The DEV_ENV environment variable must be set." >&2
    exit 1
fi

dry_run=0
if [[ "${1:-}" == "--dry" ]]; then
    dry_run=1
fi

log() {
    if [[ $dry_run -eq 1 ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "DEV_ENV: $DEV_ENV"

update_files() {
    local src="$1"
    local dest="$2"
    log "Copying directories from $src to $dest"
    pushd "$src" >/dev/null || {
        echo "Cannot change directory to $src" >&2
        return 1
    }
    while IFS= read -r -d '' dir; do
        local base_dir="${dir#./}"
        local target="${dest%/}/$base_dir"
        log "Removing target directory: rm -rf $target"
        if [[ $dry_run -eq 0 ]]; then
            rm -rf "$target"
        fi
        log "Copying directory: cp -r $dir $dest"
        if [[ $dry_run -eq 0 ]]; then
            cp -r "$dir" "$dest"
        fi
    done < <(find . -mindepth 1 -maxdepth 1 -type d -print0)
    popd >/dev/null
}

copy() {
    local src="$1"
    local dest="$2"
    log "Removing file: rm -f $dest"
    if [[ $dry_run -eq 0 ]]; then
        rm -f "$dest"
    fi
    log "Copying file: cp $src $dest"
    if [[ $dry_run -eq 0 ]]; then
        cp "$src" "$dest"
    fi
}

update_files "$DEV_ENV/env/.config" "$XDG_CONFIG_HOME"
update_files "$DEV_ENV/env/.local" "$HOME/.local"

copy "$DEV_ENV/tmux-sessionizer/tmux-sessionizer" "$HOME/.local/scripts/tmux-sessionizer"
copy "$DEV_ENV/env/.zsh_profile" "$HOME/.zsh_profile"
copy "$DEV_ENV/env/.zshrc" "$HOME/.zshrc"
copy "$DEV_ENV/env/.xprofile" "$HOME/.xprofile"
copy "$DEV_ENV/env/.tmux-sessionizer" "$HOME/.tmux-sessionizer"
copy "$DEV_ENV/dev-env" "$HOME/.local/scripts/dev-env"

echo "Dev-env script completed."
