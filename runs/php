#!/usr/bin/env bash

set -e
set -o pipefail
set -u

OS="$(uname -s)"

install_php_mac() {
    echo "Detected macOS."
    echo "Installing PHP 8.4 via Homebrew..."
    if ! command -v brew &>/dev/null; then
        echo "Homebrew is not installed. Please install Homebrew first."
        exit 1
    fi
    brew install php
}

install_php_linux() {
    echo "Detected Linux."

    # Detect Linux Distribution
    if command -v apt &>/dev/null; then
        echo "Installing PHP 8.4 via APT (Debian/Ubuntu)..."
        sudo apt update
        sudo apt install -y php8.4 php8.4-cli php8.4-common php8.4-mbstring php8.4-xml php8.4-zip php8.4-curl php8.4-bcmath php8.4-tokenizer php8.4-mysql
    elif command -v dnf &>/dev/null; then
        echo "Installing PHP 8.4 via DNF (Fedora)..."
        sudo dnf install -y php php-cli php-common php-mbstring php-xml php-zip php-curl php-bcmath php-tokenizer php-mysql
    elif command -v pacman &>/dev/null; then
        echo "Installing PHP 8.4 via Pacman (Arch Linux)..."
        sudo pacman -S --noconfirm php php-cli php-common php-mbstring php-xml php-zip php-curl php-bcmath php-mysql
    else
        echo "Unsupported Linux distribution. Please install PHP manually."
        exit 1
    fi
}

install_php_windows() {
    echo "Detected Windows."
    echo "Installing PHP 8.4 via PowerShell..."

    powershell.exe -Command "
    Set-ExecutionPolicy Bypass -Scope Process -Force;
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
    iex ((New-Object System.Net.WebClient).DownloadString('https://php.new/install/windows/8.4'))"
}

# Detect and install PHP based on OS
case "$OS" in
Darwin)
    install_php_mac
    ;;
Linux)
    install_php_linux
    ;;
MINGW* | CYGWIN* | MSYS* | Windows_NT)
    install_php_windows
    ;;
*)
    echo "Unsupported OS: $OS"
    exit 1
    ;;
esac

# Move .profile to .php_profile (optional)
if [[ -f "$HOME/.profile" ]]; then
    mv "$HOME/.profile" "$HOME/.php_profile"
    echo "Renamed .profile to .php_profile."
fi

echo "PHP installation completed. Please restart your terminal session for changes to take effect."

# Install Laravel installer via Composer (if Composer is installed)
if command -v composer &>/dev/null; then
    echo "Installing Laravel installer via Composer..."
    composer global require laravel/installer
    echo "Laravel installer installed successfully."
else
    echo "Composer is not installed. Please install Composer first before installing Laravel."
fi
